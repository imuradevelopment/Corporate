/**
 * 表示制御ユーティリティ
 * 要素の表示・非表示を制御するクラス
 * 
 * 設計思想：
 * - !important付きで確実に適用
 * - レスポンシブ対応
 * - アクセシビリティを考慮
 */

/* ========================================================================
   基本表示制御
   ======================================================================== */

.u-hidden {
  display: none !important;
}

.u-visible {
  display: block !important;
}

.u-invisible {
  visibility: hidden !important;
}

.u-visible-visibility {
  visibility: visible !important;
}

/* ========================================================================
   ディスプレイタイプ
   ======================================================================== */

.u-block {
  display: block !important;
}

.u-inline {
  display: inline !important;
}

.u-inline-block {
  display: inline-block !important;
}

.u-flex {
  display: flex !important;
}

.u-inline-flex {
  display: inline-flex !important;
}

.u-grid {
  display: grid !important;
}

.u-inline-grid {
  display: inline-grid !important;
}

.u-table {
  display: table !important;
}

.u-table-cell {
  display: table-cell !important;
}

.u-table-row {
  display: table-row !important;
}

.u-table-column {
  display: table-column !important;
}

.u-table-column-group {
  display: table-column-group !important;
}

.u-table-footer-group {
  display: table-footer-group !important;
}

.u-table-header-group {
  display: table-header-group !important;
}

.u-table-row-group {
  display: table-row-group !important;
}

.u-table-caption {
  display: table-caption !important;
}

/* ========================================================================
   フレックスボックスユーティリティ
   ======================================================================== */

.u-flex-row {
  flex-direction: row !important;
}

.u-flex-row-reverse {
  flex-direction: row-reverse !important;
}

.u-flex-col {
  flex-direction: column !important;
}

.u-flex-col-reverse {
  flex-direction: column-reverse !important;
}

.u-flex-wrap {
  flex-wrap: wrap !important;
}

.u-flex-nowrap {
  flex-wrap: nowrap !important;
}

.u-flex-wrap-reverse {
  flex-wrap: wrap-reverse !important;
}

.u-flex-1 {
  flex: 1 1 0% !important;
}

.u-flex-auto {
  flex: 1 1 auto !important;
}

.u-flex-initial {
  flex: 0 1 auto !important;
}

.u-flex-none {
  flex: none !important;
}

.u-flex-grow-0 {
  flex-grow: 0 !important;
}

.u-flex-grow {
  flex-grow: 1 !important;
}

.u-flex-shrink-0 {
  flex-shrink: 0 !important;
}

.u-flex-shrink {
  flex-shrink: 1 !important;
}

/* ========================================================================
   フレックスアライメント
   ======================================================================== */

.u-justify-start {
  justify-content: flex-start !important;
}

.u-justify-end {
  justify-content: flex-end !important;
}

.u-justify-center {
  justify-content: center !important;
}

.u-justify-between {
  justify-content: space-between !important;
}

.u-justify-around {
  justify-content: space-around !important;
}

.u-justify-evenly {
  justify-content: space-evenly !important;
}

.u-items-start {
  align-items: flex-start !important;
}

.u-items-end {
  align-items: flex-end !important;
}

.u-items-center {
  align-items: center !important;
}

.u-items-baseline {
  align-items: baseline !important;
}

.u-items-stretch {
  align-items: stretch !important;
}

.u-self-start {
  align-self: flex-start !important;
}

.u-self-end {
  align-self: flex-end !important;
}

.u-self-center {
  align-self: center !important;
}

.u-self-baseline {
  align-self: baseline !important;
}

.u-self-stretch {
  align-self: stretch !important;
}

/* ========================================================================
   グリッドユーティリティ
   ======================================================================== */

.u-grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr)) !important;
}

.u-grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
}

.u-grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr)) !important;
}

.u-grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr)) !important;
}

.u-grid-cols-5 {
  grid-template-columns: repeat(5, minmax(0, 1fr)) !important;
}

.u-grid-cols-6 {
  grid-template-columns: repeat(6, minmax(0, 1fr)) !important;
}

.u-grid-cols-12 {
  grid-template-columns: repeat(12, minmax(0, 1fr)) !important;
}

.u-col-span-1 {
  grid-column: span 1 / span 1 !important;
}

.u-col-span-2 {
  grid-column: span 2 / span 2 !important;
}

.u-col-span-3 {
  grid-column: span 3 / span 3 !important;
}

.u-col-span-4 {
  grid-column: span 4 / span 4 !important;
}

.u-col-span-5 {
  grid-column: span 5 / span 5 !important;
}

.u-col-span-6 {
  grid-column: span 6 / span 6 !important;
}

.u-col-span-12 {
  grid-column: span 12 / span 12 !important;
}

.u-col-start-1 {
  grid-column-start: 1 !important;
}

.u-col-start-2 {
  grid-column-start: 2 !important;
}

.u-col-start-3 {
  grid-column-start: 3 !important;
}

.u-col-start-4 {
  grid-column-start: 4 !important;
}

.u-col-start-5 {
  grid-column-start: 5 !important;
}

.u-col-start-6 {
  grid-column-start: 6 !important;
}

.u-col-start-12 {
  grid-column-start: 12 !important;
}

.u-col-end-1 {
  grid-column-end: 1 !important;
}

.u-col-end-2 {
  grid-column-end: 2 !important;
}

.u-col-end-3 {
  grid-column-end: 3 !important;
}

.u-col-end-4 {
  grid-column-end: 4 !important;
}

.u-col-end-5 {
  grid-column-end: 5 !important;
}

.u-col-end-6 {
  grid-column-end: 6 !important;
}

.u-col-end-12 {
  grid-column-end: 12 !important;
}

/* ========================================================================
   位置制御
   ======================================================================== */

.u-static {
  position: static !important;
}

.u-fixed {
  position: fixed !important;
}

.u-absolute {
  position: absolute !important;
}

.u-relative {
  position: relative !important;
}

.u-sticky {
  position: sticky !important;
}

/* ========================================================================
   オーバーフロー制御
   ======================================================================== */

.u-overflow-auto {
  overflow: auto !important;
}

.u-overflow-hidden {
  overflow: hidden !important;
}

.u-overflow-visible {
  overflow: visible !important;
}

.u-overflow-scroll {
  overflow: scroll !important;
}

.u-overflow-x-auto {
  overflow-x: auto !important;
}

.u-overflow-y-auto {
  overflow-y: auto !important;
}

.u-overflow-x-hidden {
  overflow-x: hidden !important;
}

.u-overflow-y-hidden {
  overflow-y: hidden !important;
}

/* ========================================================================
   レスポンシブ表示制御
   ======================================================================== */

/* モバイルファースト */
@media (min-width: 576px) {
  .u-hidden-sm {
    display: none !important;
  }
  
  .u-visible-sm {
    display: block !important;
  }
}

@media (min-width: 768px) {
  .u-hidden-md {
    display: none !important;
  }
  
  .u-visible-md {
    display: block !important;
  }
}

@media (min-width: 1024px) {
  .u-hidden-lg {
    display: none !important;
  }
  
  .u-visible-lg {
    display: block !important;
  }
}

@media (min-width: 1280px) {
  .u-hidden-xl {
    display: none !important;
  }
  
  .u-visible-xl {
    display: block !important;
  }
}

/* ========================================================================
   スクリーンリーダー専用
   ======================================================================== */

.u-sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.u-not-sr-only {
  position: static !important;
  width: auto !important;
  height: auto !important;
  padding: 0 !important;
  margin: 0 !important;
  overflow: visible !important;
  clip: auto !important;
  white-space: normal !important;
}
